---
import { css } from '@styled-system/css'
import focusRing from '@recipes/focusRing'
import type { CollectionEntry } from 'astro:content'
import { photoPath } from 'astro-path-helpers/generated'
import LocalImageWithLQIP from '@components/LocalImageWithLQIP.astro'

interface Props {
  photo: CollectionEntry<'photos'>
  priority: boolean
}

const { photo, priority = false } = Astro.props

const aspectRatio = photo.data.image.src.width / photo.data.image.src.height
const isPortrait = aspectRatio <= 1
---

<li
  class={css({
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    gridRow: 1,
    borderRadius: 'bento',

    sm: {
      gridRow: 'auto',
      aspectRatio: '1 / 1',
      padding: '4',
      backgroundColor: 'stark.background',
    },
  })}
>
  <a
    href={photoPath(photo.id)}
    style={`aspect-ratio: ${photo.data.image.src.width / photo.data.image.src.height};`}
    aria-label="Open image"
    class:list={[
      focusRing(),
      css({
        cursor: 'zoom-in',
        display: 'block',

        height: '100vw',
        position: 'relative',
        overflow: 'hidden',
        sm: {
          width: isPortrait ? 'auto' : '100%',
          height: isPortrait ? '100%' : 'auto',
          maxWidth: '100%',
          maxHeight: 'fit-content',
          boxShadow: '0 0 0 2px {colors.stark.foreground}',
        },
        _focusVisible: {
          '& img': {
            transform: 'scale(1.05)',
            filter: 'brightness(1.05)',
          },
        },
      }),
    ]}
  >
    <LocalImageWithLQIP
      lqipSrc={photo.data.image.src.src}
      src={photo.data.image.src}
      alt={photo.data.image.description}
      quality="medium"
      priority={priority}
      sizes={`
        (max-width: 640px) 1200px,
        (max-width: 732px) 330px,
        (max-width: 1215px) 360px,
        276px
      `}
      class={css({
        position: 'relative',
        width: '100%',
        transition: 'all 0.3s',
        transitionTimingFunction: 'cubic-bezier(0.23, 1, 0.32, 1)',

        _supportsHover: {
          _hover: {
            transform: 'scale(1.05)',
            filter: 'brightness(1.05)',
          },
        },
      })}
    />
    <span class={css({ srOnly: true })}>Open image: {photo.data.title}</span>
  </a>
</li>
