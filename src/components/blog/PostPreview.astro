---
import { css } from '@styled-system/css'
import interactiveSurface from '@recipes/interactiveSurface'
import focusRing from '@recipes/focusRing'
import { linkOverlay } from '@styled-system/patterns'
import { type CollectionEntry, getEntries } from 'astro:content'
import DateTimeDisplay from '@components/blog/DateTimeDisplay.astro'
import TagsList from '@components/blog/TagsList.astro'
import { tagIsActive } from '@utils/index'
import { postPath } from 'astro-path-helpers/generated'

interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props

const tags = await getEntries(post.data.tags)
const activeTags = tags.filter(tagIsActive)
---

<article
  class:list={[
    css({
      colorPalette: 'pink',

      borderRadius: 'bento',
      padding: 'bento.padding',

      display: 'flex',
      flexDirection: 'column',
      rowGap: '2',
      justifyContent: 'space-between',

      textDecoration: 'none',

      position: 'relative',
    }),
    interactiveSurface(),
    focusRing({ mode: 'focus-visible-within' }),
  ]}
>
  <a
    href={postPath(post.id)}
    class:list={[
      linkOverlay(),
      css({
        textDecoration: 'none',
        color: 'currentColor',
        _link: {
          _visited: {
            color: 'currentColor',
          },
        },
        _focusVisible: {
          outline: 'none',
        },
        '& [data-icon]': {
          flexShrink: 0,
        },
      }),
    ]}
  >
    <h2
      class={css({
        color: 'currentColor',
        textStyle: '2xl',
        fontWeight: '710',
      })}
    >
      {post.data.title}
    </h2>
  </a>

  <p
    class={css({
      textStyle: 'md',
    })}
  >
    {post.data.previewText}
  </p>

  <div
    class={css({
      display: 'flex',
      flexWrap: 'wrap',
      justifyContent: 'space-between',
      alignItems: 'baseline',
      columnGap: '4',
    })}
  >
    <DateTimeDisplay
      dateTime={post.data.publishedAt}
      class={css({
        textStyle: 'sm',
        opacity: '0.7',
      })}
    />
    <TagsList tags={activeTags} class={css({ position: 'relative' })} />
  </div>
</article>
