---
import { css } from '@styled-system/css'
import focusRing from '@recipes/focusRing'
import { getEntries, type CollectionEntry } from 'astro:content'
import { Icon } from 'astro-icon/components'
import TagsList from '@components/blog/TagsList.astro'
import { tagIsActive } from '@utils/index'
import { postsPath } from 'astro-path-helpers'

interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props

const tags = await getEntries(post.data.tags)
const activeTags = tags.filter(tagIsActive)
---

<div
  class:list={[
    css({
      display: 'flex',
      flexWrap: 'wrap',
      justifyContent: 'space-between',
      alignItems: 'baseline',
      columnGap: 'bento.gap',

      '&&': {
        gridColumn: 'header-content',
      },
    }),
  ]}
>
  <a
    href={postsPath()}
    class:list={[
      css({
        justifySelf: 'start',
        textDecoration: 'none',

        lineHeight: 'tight',
        fontWeight: '680',
        letterSpacing: 'wider',
        textTransform: 'uppercase',
        fontSize: 'xs',
        fontFamily: 'syne',
        display: 'flex',
        alignItems: 'center',
        columnGap: '1.5',

        '&&': {
          gridColumn: 'header-content',
        },

        color: 'currentColor',
        _hover: {
          color: 'color-mix(in oklch, currentColor, white 30%)',
        },
        _active: {
          color: 'active.accent',
        },
      }),
      focusRing(),
    ]}
  >
    <Icon name="ri:arrow-left-fill" /> Latest posts
  </a>

  <TagsList tags={activeTags} />
</div>

<h1
  class:list={[
    css({
      color: 'currentColor',
      textWrap: 'balance',
      textStyle: 'h1',
      marginBlockEnd: 0,
      '&&': {
        gridColumn: 'header-content',
      },
    }),
  ]}
>
  {post.data.title}
</h1>
{
  post.data.subtitle && (
    <p
      class:list={[
        css({
          fontSize: 'xl',
          lineHeight: 'tight',
          fontFamily: 'syne',
          textWrap: 'balance',
          opacity: 0.9,
          '&&': {
            gridColumn: 'header-content',
          },
        }),
      ]}
    >
      {post.data.subtitle}
    </p>
  )
}
