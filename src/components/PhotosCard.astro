---
import { getCollection } from 'astro:content';
import PhotosCardItem from '../components/PhotosCardItem.astro'
import { Icon } from 'astro-icon/components'
import { publishedEntries, sortByPosition } from '../utils';

const photos = await getCollection('photos', publishedEntries);

let sortedPhotos = photos.sort(sortByPosition).slice(0, 6);

---
<section class="photos-card">
  <a href="/photos" class="photo-cards__link">
    <h2>Check Out My Photos <Icon name="ion:caret-forward-sharp" /></h2>
  </a>
  
  <div class="photos-card__preview">
    {sortedPhotos.map((photo) => (
      <PhotosCardItem photo={photo} />
    ))}
  </div>
</section>


<style lang="scss">
  @import '../styles/mixins.scss';

  :global(:root[data-theme='light']) {
    .photos-card {
      --color: var(--color-neutral-700);
      --background-color: var(--color-neutral-275);

      --hover-color: var(--color-neutral-950);
      --hover-background-color: var(--color-neutral-350);

      --active-color: var(--color-neutral-100);
      --active-background-color: var(--color-accent-one-525);
    }
  }
  :global(:root[data-theme='dark']) {
    .photos-card {
      --color: var(--color-neutral-275);
      --background-color: var(--color-neutral-775);

      --hover-color: var(--color-neutral-0);
      --hover-background-color: var(--color-neutral-700);

      --active-color: var(--color-neutral-100);
      --active-background-color: var(--color-accent-one-525);
    }
  }

  .photos-card {
    grid-area: photos;
    color: var(--color);
    background-color: var(--background-color);
    border-radius: var(--fluid-bento-radius);
    padding: var(--fluid-bento-padding) 0;
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--fluid-bento-gap);
    transition: background-color 0.2s, color 0.2s;

    &:hover {
      color: var(--hover-color);
      background-color: var(--hover-background-color);
    }
    &:active, &:hover:active {
      color: var(--active-color);
      background-color: var(--active-background-color);
    }
    &:focus-within {
      @include focus-outline;
    }
  }

  .photo-cards__link {
    padding: 0 var(--fluid-bento-padding);
    text-decoration: none;

    &:link, &:visited {
      color: currentColor;
    }

    &:focus-visible {
      outline: none;
    }

    svg {
      color: currentColor
    }

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      z-index: 1;
    }

    h2 {
      color: currentColor;
      margin: 0;
      display: flex;
      gap: var(--space-2);
      justify-content: space-between;

      svg {
        flex-shrink: 0;
      }

    }
  }

  .photos-card__preview {
    list-style: none;
    max-width: var(--layout-size-3);
    margin: 0;
    padding: 0 var(--fluid-bento-padding);
    display: flex;
    justify-content: space-between;
    gap: var(--space-2);
    width: 100%;
    overflow: hidden;
  }
</style>
