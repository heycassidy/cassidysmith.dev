@use 'sass-svg-uri';

@mixin focus-outline($color: var(--color-focus-outline)) {
  outline: 2px dashed $color;
  outline-offset: 1px;
  &:hover {
    outline: none;
  }
}

@mixin text-link {
  transition:
    color 0.2s,
    text-decoration-color 0.2s;

  &:link {
    color: var(--color-link);
    text-decoration-color: var(--color-link-decoration);
  }
  &:visited {
    color: var(--color-link-visited);
    text-decoration-color: var(--color-link-visited-decoration);
  }
  &:hover {
    color: var(--color-link-hover);
    text-decoration-color: var(--color-link-hover-decoration);
    text-decoration-style: dashed;
  }
  &:active,
  &:hover:active {
    color: var(--color-link-active);
    text-decoration-color: var(--color-link-active-decoration);
  }
  &:focus {
    @include focus-outline();
  }
}

@mixin button {
  line-height: 1;
  display: flex;
  align-items: center;
  gap: 0.5ch;
  border: none;
  cursor: pointer;
  padding: var(--space-2) var(--space-3);
  font-family: var(--font-syne);
  font-weight: 700;
  font-size: var(--font-size-1);
  border-radius: calc(
    var(--fluid-bento-radius) - var(--fluid-bento-padding) / 2
  );
  transition:
    color 0.2s,
    background-color 0.2s;

  &:link {
    text-decoration: none;
  }

  color: var(--color-button-text);
  background-color: var(--color-button-background);

  &:hover {
    color: var(--color-button-hover-text);
    background-color: var(--color-button-hover-background);
  }
  &:active,
  &:hover:active {
    color: var(--color-button-active-text);
    background-color: var(--color-button-active-background);
  }
  &:focus-visible {
    @include focus-outline;
  }

  &--small {
    font-size: var(--font-size-0);
  }
}

@mixin dot-pattern-background($color, $size) {
  background-color: $color;
  mask: sass-svg-uri.encode(
    "<svg width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'><g fill='#000' fill-rule='evenodd'><circle cx='2' cy='2' r='2'/><circle cx='10' cy='10' r='2'/></g></svg>"
  );
  mask-size: $size;
}

@mixin breakpoint-x-small($direction: 'min') {
  @media (#{$direction}-width: 20rem) {
    @content;
  }
}
@mixin breakpoint-small($direction: 'min') {
  @media (#{$direction}-width: 37.5rem) {
    @content;
  }
}
@mixin breakpoint-medium($direction: 'min') {
  @media (#{$direction}-width: 56.25rem) {
    @content;
  }
}
@mixin breakpoint-large($direction: 'min') {
  @media (#{$direction}-width: 75rem) {
    @content;
  }
}
@mixin breakpoint-x-large($direction: 'min') {
  @media (#{$direction}-width: 112.5rem) {
    @content;
  }
}

@mixin colorModeStyles($mode) {
  :global(:root[data-theme='#{$mode}']) {
    @content;
  }
}
