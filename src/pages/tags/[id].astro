---
import { render, getCollection, type CollectionEntry } from 'astro:content'
import AppLayout from '@layouts/AppLayout.astro'
import PrimaryLayout from '@layouts/PrimaryLayout.astro'
import Prose from '@components/Prose.astro'
import SEOTags from '@components/SEOTags.astro'
import PostsList from '@components/blog/PostsList.astro'
import {
  tagIsActive,
  entryIsPublished,
  sortByPublishedAt,
  entryHasTag,
} from '@utils/index'

interface Props {
  tag: CollectionEntry<'tags'>
}

const { tag } = Astro.props
const { Content } = await render(tag)

let posts = await getCollection('blog')
posts = posts
  .filter(entryIsPublished)
  .filter(entryHasTag(tag))
  .sort(sortByPublishedAt)

export async function getStaticPaths() {
  const tags = await getCollection('tags', tagIsActive)

  return tags.map((entry: CollectionEntry<'tags'>) => ({
    params: { id: entry.id },
    props: { tag: entry },
  }))
}
---

<AppLayout>
  <SEOTags
    slot="head"
    title={`Posts Tagged ${tag.data.title}`}
    description={`Posts Tagged: ${tag.data.title} from Cassidyâ€™s blog`}
  />
  <PrimaryLayout>
    <Prose as="main">
      <h1>Posts Tagged {tag.data.title}</h1>
      <Content />
    </Prose>
    <PostsList posts={posts} />
  </PrimaryLayout>
</AppLayout>

<style>
  main {
    padding: var(--fluid-bento-padding);
    max-width: var(--space-content-4);
  }
</style>
